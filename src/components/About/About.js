import React, { Component } from "react";
import styles from "./About.module.scss";
import FirstSection from "./FirstSection";
import HelloSection from "./HelloSection";
import WorksSection from "./WorksSection";

class About extends Component {
  state = {
    count: 0,
    controls: []
  };
  sectionsRef = React.createRef();

  isScrolling = false;

  onWheel(e) {
    let { count } = this.state;
    let element = this.sectionsRef.current;
    let minScrollCount = -1;
    let maxScrollCount = -element.children.length + 2;

    if (this.isScrolling === false) {
      this.isScrolling = true;
      setTimeout(() => (this.isScrolling = false), 500);

      if (e.deltaY > 0) {
        // eslint-disable-next-line
        count < maxScrollCount ? (count = count) : (count = count - 1);
      } else {
        // eslint-disable-next-line
        count > minScrollCount ? (count = count) : (count = count + 1);
      }
    }

    this.setState({ count }, () => {
      element.style.transform = `translateY(${count * 100}%)`;
    });
  }

  onControlsClick(e) {
    let element = this.sectionsRef.current;

    if (e.target.dataset.scroll) {
      let count = +e.target.dataset.scroll;

      this.setState({ count }, () => {
        element.style.transform = `translateY(${count * 100}%)`;
      });
    }
  }

  renderControls() {
    let controls = [];
    for (let i = 0; i < this.sectionsRef.current.children.length; i++) {
      controls.push(-i);
    }
    this.setState({ controls: [...controls] });
  }

  componentDidMount() {
    this.renderControls();
  }

  render() {
    let { controls, count } = this.state;

    return (
      <div className={styles.About} onWheel={e => this.onWheel(e)}>
        <div className={styles.controls}>
          <div
            className={`${styles.controls_arrow} ${styles.controls_arrow_top}`}
          />
          <ul
            className={styles.controls_list}
            onClick={e => this.onControlsClick(e)}
          >
            {controls.map(i => (
              <li
                className={
                  count === i
                    ? styles.controls_item_active
                    : styles.controls_item
                }
                key={i}
                data-scroll={i}
              />
            ))}
          </ul>
          <div
            className={`${styles.controls_arrow} ${
              styles.controls_arrow_bottom
            }`}
          />
          <div className={styles.controls_theme}>
            <svg
              viewBox="0 0 64 64"
              version="1.1"
              transition="0.3s"
              className={styles.controls_theme_svg}
            >
              <g id="surface1">
                <path d="M 44.554688 5.761719 C 44.148438 5.800781 43.75 5.964844 43.417969 6.257813 C 42.757813 6.832031 42.550781 7.722656 42.890625 8.527344 C 44.425781 12.164063 45.128906 16.035156 44.984375 20.03125 C 44.460938 34.082031 33.039063 45.484375 18.984375 45.984375 C 15.75 46.101563 12.582031 45.648438 9.546875 44.644531 C 8.71875 44.375 7.84375 44.652344 7.320313 45.355469 C 6.796875 46.0625 6.785156 46.984375 7.296875 47.707031 C 12.785156 55.488281 21.546875 60 30.996094 60 C 31.582031 60 32.175781 59.980469 32.765625 59.949219 C 47.128906 59.09375 58.796875 47.644531 59.910156 33.3125 C 60.773438 22.167969 55.355469 11.71875 45.761719 6.039063 C 45.378906 5.816406 44.960938 5.722656 44.554688 5.761719 Z M 44.738281 7.757813 C 53.671875 13.046875 58.722656 22.78125 57.917969 33.15625 C 56.878906 46.5 46.015625 57.15625 32.644531 57.953125 C 23.25 58.511719 14.359375 54.25 8.921875 46.546875 C 12.179688 47.621094 15.59375 48.101563 19.050781 47.984375 C 34.152344 47.445313 46.417969 35.199219 46.980469 20.105469 C 47.136719 15.816406 46.382813 11.65625 44.738281 7.757813 Z M 16.785156 10 C 16.433594 10 16.082031 10.160156 15.90625 10.484375 L 13.859375 14.230469 C 13.492188 14.902344 12.941406 15.453125 12.269531 15.820313 L 8.523438 17.871094 C 8.199219 18.042969 8 18.378906 8 18.746094 C 8 19.113281 8.199219 19.449219 8.523438 19.625 L 12.265625 21.671875 C 12.941406 22.042969 13.492188 22.589844 13.859375 23.265625 L 15.90625 27.015625 C 16.082031 27.332031 16.421875 27.53125 16.785156 27.53125 C 17.148438 27.53125 17.488281 27.332031 17.660156 27.015625 L 19.714844 23.265625 C 20.082031 22.589844 20.632813 22.042969 21.304688 21.671875 L 25.050781 19.625 C 25.375 19.449219 25.574219 19.109375 25.574219 18.746094 C 25.574219 18.382813 25.375 18.042969 25.050781 17.871094 L 21.304688 15.820313 C 20.628906 15.453125 20.082031 14.902344 19.714844 14.230469 L 17.660156 10.484375 C 17.488281 10.160156 17.136719 10 16.785156 10 Z M 16.785156 13.046875 L 17.957031 15.1875 C 18.511719 16.199219 19.335938 17.023438 20.34375 17.574219 L 22.488281 18.746094 L 20.34375 19.917969 C 19.335938 20.46875 18.511719 21.292969 17.957031 22.300781 L 16.785156 24.449219 L 15.613281 22.300781 C 15.0625 21.292969 14.238281 20.46875 13.230469 19.917969 L 11.082031 18.746094 L 13.230469 17.574219 C 14.238281 17.023438 15.0625 16.199219 15.613281 15.1875 Z M 52.65625 22.035156 C 52.527344 22.03125 52.394531 22.050781 52.265625 22.097656 C 51.746094 22.289063 51.476563 22.863281 51.667969 23.378906 C 51.929688 24.097656 52.15625 24.832031 52.335938 25.570313 C 52.449219 26.027344 52.855469 26.332031 53.308594 26.332031 C 53.386719 26.332031 53.464844 26.324219 53.546875 26.304688 C 54.082031 26.171875 54.410156 25.632813 54.277344 25.09375 C 54.078125 24.285156 53.832031 23.476563 53.546875 22.691406 C 53.40625 22.304688 53.046875 22.054688 52.65625 22.035156 Z M 31.785156 23.039063 C 31.433594 23.039063 31.082031 23.199219 30.90625 23.519531 L 29.648438 25.824219 C 29.457031 26.171875 29.171875 26.457031 28.824219 26.648438 L 26.519531 27.90625 C 26.199219 28.082031 26 28.417969 26 28.785156 C 26 29.148438 26.199219 29.488281 26.519531 29.660156 L 28.824219 30.921875 C 29.171875 31.113281 29.457031 31.398438 29.648438 31.746094 L 30.90625 34.050781 C 31.082031 34.371094 31.421875 34.570313 31.785156 34.570313 C 32.148438 34.570313 32.488281 34.371094 32.660156 34.050781 L 33.925781 31.746094 C 34.113281 31.398438 34.398438 31.113281 34.75 30.921875 L 37.050781 29.660156 C 37.375 29.488281 37.574219 29.148438 37.574219 28.785156 C 37.574219 28.421875 37.375 28.082031 37.050781 27.90625 L 34.75 26.648438 C 34.398438 26.457031 34.113281 26.171875 33.921875 25.824219 L 32.660156 23.519531 C 32.488281 23.199219 32.136719 23.039063 31.785156 23.039063 Z M 31.785156 26.082031 L 32.167969 26.78125 C 32.542969 27.46875 33.101563 28.027344 33.785156 28.402344 L 34.484375 28.785156 L 33.785156 29.171875 C 33.101563 29.546875 32.542969 30.105469 32.171875 30.785156 L 31.785156 31.488281 L 31.402344 30.785156 C 31.027344 30.101563 30.46875 29.546875 29.78125 29.171875 L 29.082031 28.785156 L 29.78125 28.402344 C 30.46875 28.027344 31.027344 27.46875 31.402344 26.78125 Z M 53.875 28.640625 C 53.324219 28.660156 52.898438 29.128906 52.921875 29.679688 C 53.082031 33.519531 52.195313 37.320313 50.359375 40.675781 C 50.09375 41.160156 50.273438 41.769531 50.753906 42.03125 C 50.90625 42.117188 51.074219 42.15625 51.234375 42.15625 C 51.589844 42.15625 51.929688 41.96875 52.113281 41.636719 C 54.125 37.960938 55.09375 33.796875 54.917969 29.59375 C 54.894531 29.042969 54.433594 28.628906 53.875 28.640625 Z M 39.625 48.394531 C 39.496094 48.410156 39.367188 48.453125 39.25 48.519531 C 38.769531 48.796875 38.609375 49.410156 38.886719 49.890625 L 39.886719 51.621094 C 40.070313 51.941406 40.40625 52.121094 40.75 52.121094 C 40.921875 52.121094 41.09375 52.078125 41.25 51.984375 C 41.730469 51.710938 41.890625 51.097656 41.613281 50.621094 L 40.613281 48.890625 C 40.40625 48.53125 40.011719 48.347656 39.625 48.394531 Z M 24.816406 50.34375 C 24.429688 50.398438 24.09375 50.675781 23.984375 51.078125 L 23.46875 53.011719 C 23.324219 53.542969 23.644531 54.089844 24.175781 54.234375 C 24.261719 54.257813 24.347656 54.269531 24.4375 54.269531 C 24.875 54.269531 25.28125 53.972656 25.402344 53.527344 L 25.921875 51.59375 C 26.0625 51.0625 25.746094 50.511719 25.214844 50.371094 C 25.078125 50.332031 24.945313 50.328125 24.816406 50.34375 Z M 35.1875 50.34375 C 35.058594 50.328125 34.921875 50.332031 34.785156 50.371094 C 34.253906 50.511719 33.9375 51.0625 34.078125 51.59375 L 34.597656 53.527344 C 34.71875 53.972656 35.121094 54.269531 35.5625 54.269531 C 35.652344 54.269531 35.738281 54.257813 35.824219 54.234375 C 36.355469 54.089844 36.675781 53.542969 36.53125 53.011719 L 36.015625 51.078125 C 35.90625 50.675781 35.570313 50.398438 35.1875 50.34375 Z M 30 51 C 29.445313 51 29 51.449219 29 52 L 29 54 C 29 54.550781 29.445313 55 30 55 C 30.554688 55 31 54.550781 31 54 L 31 52 C 31 51.449219 30.554688 51 30 51 Z " />
              </g>
            </svg>
          </div>
        </div>
        <div className={styles.sections} ref={this.sectionsRef}>
          <HelloSection />
          <FirstSection />
          <WorksSection />
        </div>
      </div>
    );
  }
}

export default About;
